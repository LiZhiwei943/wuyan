{"title":"java","uid":"745fa9d0dd7564f8475d86a8b9ad72f3","slug":"JAVA基础","date":"2023-03-12T14:27:00.000Z","updated":"2023-03-12T14:32:26.249Z","comments":true,"path":"api/articles/JAVA基础.json","keywords":null,"cover":"https://cover.png","content":"<h1 id=\"JAVA\"><a href=\"#JAVA\" class=\"headerlink\" title=\"JAVA\"></a>JAVA</h1><p>java最早的版本诞生于1995年</p>\n<p>目前长期支持的JDK版本为，8版和11版</p>\n<p>java se    标准类库</p>\n<p>java ee    企业类库</p>\n<h2 id=\"java的特点\"><a href=\"#java的特点\" class=\"headerlink\" title=\"java的特点\"></a>java的特点</h2><ol>\n<li>java是面向对象编程</li>\n<li>java的健壮性，强机制类型、异常处理、垃圾自动回收</li>\n<li>跨平台性，通过 . java编译出的 . class文件可以在mac、window、linux多种平台运行</li>\n<li>java和js一样是一门解释类型语言，需要通过编译器（开发工具）查看结果</li>\n</ol>\n<h2 id=\"java的运行与编译\"><a href=\"#java的运行与编译\" class=\"headerlink\" title=\"java的运行与编译\"></a>java的运行与编译</h2><p>JVM：java虚拟机，java语言通过不同平台的java虚拟机实现java程序的运行</p>\n<p>JDK :java开发工具集  JDK = JRE+开发工具库</p>\n<p>JRE：java运行环境    JRE=JVM+核心类库</p>\n<p>如果不做开发，想直接运行编译好的 . class文件，只需要JVM和JRE即可</p>\n<h1 id=\"java学习第二天\"><a href=\"#java学习第二天\" class=\"headerlink\" title=\"java学习第二天\"></a>java学习第二天</h1><h2 id=\"javaJDK下载\"><a href=\"#javaJDK下载\" class=\"headerlink\" title=\"javaJDK下载\"></a>javaJDK下载</h2><p>下载地址：<a href=\"https://www.oracle.com/java/technologies/downloads/#java8\">https://www.oracle.com/java/technologies/downloads/#java8</a></p>\n<p>下载完成后配置环境变量：<a href=\"https://www.jb51.net/article/243119.htm#_lab2_0_0\">https://www.jb51.net/article/243119.htm#_lab2_0_0</a></p>\n<h2 id=\"我的第一个java程序\"><a href=\"#我的第一个java程序\" class=\"headerlink\" title=\"我的第一个java程序\"></a>我的第一个java程序</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//public class Hello&#123;&#125;  创建一个共有的class类</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hello</span><span class=\"token punctuation\">&#123;</span>\n\t\n    <span class=\"token comment\">//创建入口函数main</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//通过系统输出字符串 \"lzw studying for java\"</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lzw studying for java\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>具体步骤：<a href=\"https://www.bilibili.com/video/BV1fh411y7R8?p=17&amp;spm_id_from=pageDriver&amp;vd_source=f24cb303eb5accca215fadb0a6729822\">https://www.bilibili.com/video/BV1fh411y7R8?p=17&amp;spm_id_from=pageDriver&amp;vd_source=f24cb303eb5accca215fadb0a6729822</a></p>\n<h3 id=\"补充\"><a href=\"#补充\" class=\"headerlink\" title=\"补充\"></a>补充</h3><p>.java 源文件    </p>\n<p>.class 字节码文件</p>\n<h3 id=\"编写java程序注意事项\"><a href=\"#编写java程序注意事项\" class=\"headerlink\" title=\"编写java程序注意事项\"></a>编写java程序注意事项</h3><ol>\n<li>文件名与与创建的public主类名需要一致</li>\n<li>每个java文件中，public主类名，有且只能有一个</li>\n<li>java文件只能有一个public主类名，但可以有多个class类名，每个class类名都可以有一个入口main方法</li>\n<li>每行程序必须要以 ；结尾</li>\n</ol>\n<h2 id=\"学习一门语言\"><a href=\"#学习一门语言\" class=\"headerlink\" title=\"学习一门语言\"></a>学习一门语言</h2><ol>\n<li><p>掌握 会使用，能做出东西</p>\n</li>\n<li><p>能够熟练去使用，实现需求</p>\n</li>\n<li><p>挑细节，了解其底层原理，逐步深入，改善自己的编码思维</p>\n</li>\n<li><p>每天都要学习不能中断</p>\n</li>\n</ol>\n<h2 id=\"java转义字符\"><a href=\"#java转义字符\" class=\"headerlink\" title=\"java转义字符\"></a>java转义字符</h2><p>\\t 制表符，固定空格</p>\n<p>\\n 换行符</p>\n<p>因为在编程中，一些符号属于关键符号，无法直接输入，因此需要通过 \\ 来实现</p>\n<p>\\\\     输出    \\</p>\n<p>\\‘    输出 单引号 ‘</p>\n<p>\\”    输出 双引号 “</p>\n<p>\\r  回车    这里的回车是指将光标移动至当前行的最前方，然后根据\\t后面字数替换相对数量字数</p>\n<p>结合使用：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hello</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//\\t</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I\\tLove\\tYou\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//\\r</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是真的废物\\r我啊\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//\\r+\\n</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我是真的废物\\r\\n不！我不是。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//结合使用</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"书名\\t作者\\t价格\\t销量\\r\\n三国\\t罗贯中\\t120\\t1000\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"java注释\"><a href=\"#java注释\" class=\"headerlink\" title=\"java注释\"></a>java注释</h2><p>添加注释可提高代码的可读性，做到自己看得懂，别人也看得懂</p>\n<p>单行注释： //    </p>\n<p>多行注释： /**/</p>\n<p>文档注释：/**</p>\n<p>​                    *</p>\n<p>​                    * @author XXX    </p>\n<p>​                    */</p>\n<p>文档注释可以通过命令，创建网页形式的工程文档  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">javadoc  <span class=\"token parameter variable\">-d</span>  文件保存路径\t<span class=\"token parameter variable\">-author</span>  文件名称\njavadoc <span class=\"token parameter variable\">-d</span> D:<span class=\"token punctuation\">\\</span>桌面<span class=\"token punctuation\">\\</span>folder<span class=\"token punctuation\">\\</span>java<span class=\"token punctuation\">\\</span>temp  <span class=\"token parameter variable\">-author</span> <span class=\"token parameter variable\">-version</span> Hello.java<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//我是单行注释</span>\n\n<span class=\"token comment\">/*\n\t我\n\t是\n\t多\n\t行\n\t注释\n*/</span>\n\n<span class=\"token comment\">//它是文档注释</span>\n<span class=\"token comment\">/**\n* @author 无言\n* @version 1.0\n*/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>注意：</p>\n<ol>\n<li>注释不会被编译</li>\n<li>多行注释中不能嵌套多行注释</li>\n<li>文档注释中的  @XXX 是有指定的，不能随便输入</li>\n</ol>\n<h1 id=\"java学习第三天\"><a href=\"#java学习第三天\" class=\"headerlink\" title=\"java学习第三天\"></a>java学习第三天</h1><h2 id=\"java编写规范\"><a href=\"#java编写规范\" class=\"headerlink\" title=\"java编写规范\"></a>java编写规范</h2><ol>\n<li>文档注释只用于java的类与方法</li>\n<li>两个字符之间要有空格  a + b = c</li>\n<li>tab向右退格，shift+tab向左退格  可选多行代码</li>\n<li>java代码编译需要使用utf-8字符集</li>\n<li>以 ；结尾后记住要换行，且每一行代码字数最多不要超过80个</li>\n</ol>\n<h2 id=\"命令行dos命令\"><a href=\"#命令行dos命令\" class=\"headerlink\" title=\"命令行dos命令\"></a>命令行dos命令</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">md D:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>文件夹名\t\t\t在D盘根目录下创建文件夹\nrd D:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>文件夹名\t\t\t在D盘根目录下删除文件夹\ncls\t\t\t\t\t   清空命令行\n<span class=\"token function\">dir</span>\t\t\t\t\t\t查看当前目录有什么内容\n<span class=\"token function\">dir</span> 路径\t\t\t\t   查看指定路径下有什么内容\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>/\t\t\t\t\t切换到上一级目录\n<span class=\"token builtin class-name\">cd</span> ./\t\t\t\t\t切换到当前目录\n<span class=\"token builtin class-name\">cd</span> /\t\t\t\t\t切换到根目录\nD:\t\t\t\t\t\t切换到D盘，切换到其他盘方法一样\ntree\t\t\t\t\t查看指定文件夹下的文件目录树\n<span class=\"token builtin class-name\">exit</span>\t\t\t\t\t退出命令行\n<span class=\"token builtin class-name\">echo</span> ok <span class=\"token operator\">></span> www.txt\t\t将ok写入到www.txt文件中，如果txt文件不存在，创建该文件\ndel 文件名\t\t\t\t\t删除文件\ncopy 文件名  D:/文件名\t将指定文件拷贝到指定目录下，目标目录下的文件名可自行设置\nmove 文件名  D:/文件名\t将指定文件剪切到指定目录下，目标目录下的文件名可自行设置<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"相对路径与绝对路径\"><a href=\"#相对路径与绝对路径\" class=\"headerlink\" title=\"相对路径与绝对路径\"></a>相对路径与绝对路径</h2><p>D盘下有abc和abd两个文件夹</p>\n<p>需求：我想要在abc中访问abd中的文件</p>\n<ol>\n<li>相对路径<ol>\n<li>从当前目录开始向目标文件进行访问</li>\n<li>../abd/文件名</li>\n</ol>\n</li>\n<li>绝对路径<ol>\n<li>从顶级目录开始向目标文件进行访问</li>\n<li>D:/abd/文件名</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"Java学习第4天\"><a href=\"#Java学习第4天\" class=\"headerlink\" title=\"Java学习第4天\"></a>Java学习第4天</h1><h2 id=\"输出语句\"><a href=\"#输出语句\" class=\"headerlink\" title=\"输出语句\"></a>输出语句</h2><p>System.out.println() 输出语句并换行</p>\n<p>System.out.print() 输出语句不换行</p>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>变量是程序的基本组成单位</p>\n<p>用于存储值数据的地址，通过变量存储的地址获取数据并输出</p>\n<p><strong>注意：</strong></p>\n<ol>\n<li><p>变量 = 变量名+值+数据类型</p>\n</li>\n<li><p>变量在同一作用域中不能重名 </p>\n</li>\n<li><p>变量值需要符合变量的数据类型</p>\n</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">Hello</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//创建整型变量num存储数字3的地址</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><p>字节（byte）：字节大小等于数据所占空间大小</p>\n<p><strong>基本数据类型：</strong></p>\n<ol>\n<li>byte&gt;short&gt;int&gt;long   1&gt;2&gt;4&gt;8整型</li>\n<li>float 浮点  占4个字节的浮点数</li>\n<li>double 多重浮点型  占8个字节的浮点数</li>\n<li>char 字符 ‘a’</li>\n<li>Boolean 布尔值  true false</li>\n</ol>\n<p><strong>引用数据类型：</strong></p>\n<ol>\n<li>类 class</li>\n<li>接口 interface</li>\n<li>数组 [ ]</li>\n<li>String[] 字符串 “aaaa”</li>\n</ol>\n<h3 id=\"号使用\"><a href=\"#号使用\" class=\"headerlink\" title=\"+号使用\"></a>+号使用</h3><p>运算顺序从左至右 </p>\n<p>数字+字符串= 字符串</p>\n<p>数字+数字 = 数字 </p>\n<p>数字+字符 = 数字</p>\n<h2 id=\"数据类型（Detail）\"><a href=\"#数据类型（Detail）\" class=\"headerlink\" title=\"数据类型（Detail）\"></a>数据类型（Detail）</h2><p><strong>1byte = 8bi</strong>t</p>\n<p><strong>整型：</strong></p>\n<ol>\n<li>在数字后面+”L” or “l” 将数值转换为Long类型</li>\n<li>定义整型时通常使用int类型，不确定大小时使用long</li>\n</ol>\n<p><strong>浮点型：</strong></p>\n<ol>\n<li>浮点数默认为double类型，声明为float类型需要在后面加 ”f“ 或 ”F“</li>\n<li>10进制数形式表示浮点数：.123 , 678.0f</li>\n<li>科学计数法表示：0.02345e2  or  0.02345E-2   </li>\n<li>通常情况下，浮点数应该使用double表示数据类型</li>\n<li>浮点数2.7 不等于  8.1/3，因为8.1/3 =2.6999999999999997    </li>\n</ol>\n<p><strong>字符：</strong></p>\n<ol>\n<li>字符可以直接存放数字</li>\n<li>字符必须用单引号包括</li>\n<li>转义字符也是字符</li>\n<li>输出字符对应ASCll码，（int）’a’</li>\n<li>输出ASCll码对应的字符 （char）97</li>\n</ol>\n<p><strong>字符编码：</strong></p>\n<ol>\n<li><p>utf-8 大小可变的编码 字母1字节  汉字3字节：</p>\n<ol>\n<li>UTF-8是互联网上使用最广的一种Unicode实现方式（改进）</li>\n<li>UTF-8是一种变长的编码方式，它可以使用1-6个字节表示一个字符，根据不同的字符变化长度</li>\n<li>大小可变</li>\n</ol>\n</li>\n<li><p>gbk 可以表示汉字，范围广  字母1字节  汉字2字节</p>\n</li>\n<li><p>gbk2312  可以表示少量汉字</p>\n</li>\n<li><p>big5 可以表示繁体字</p>\n</li>\n<li><p>ASCll编码表：</p>\n<ol>\n<li>一个字节可以表示256给字符，ASCll码一共128个字符</li>\n<li>缺点：不能表示所有字符</li>\n</ol>\n</li>\n<li><p>Unicode编码表：</p>\n<ol>\n<li>好处：一种编码，包含世界上所有字符编码</li>\n<li>缺点：对应存储空间比较浪费</li>\n<li>Unicode码表兼容ASCll码表</li>\n</ol>\n</li>\n</ol>\n<p><strong>Boolean类型：</strong></p>\n<ol>\n<li>只有两个值：true   false</li>\n<li><strong>不可以用0或者非0代替false或者true</strong></li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> typeDetail<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//整数</span>\n\n\t\t<span class=\"token comment\">//在数字后面+”L\" or \"l\" 将数值转换为Long类型</span>\n\t\t<span class=\"token comment\">//int n2 = 3L;  //Error：空间超出</span>\n\t\t<span class=\"token comment\">//定义整型时通常使用int类型，不确定大小时使用long</span>\n\t\t<span class=\"token keyword\">long</span> num <span class=\"token operator\">=</span> <span class=\"token number\">2L</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//浮点数</span>\n\n\t\t<span class=\"token comment\">//浮点数默认为double类型，声明为float类型需要在后面加 ”f“ 或 ”F“</span>\n\t\t<span class=\"token keyword\">double</span> f <span class=\"token operator\">=</span> <span class=\"token number\">0.123f</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//浮点数表示方式</span>\n\t\t<span class=\"token comment\">//十进制表示</span>\n\t\t<span class=\"token keyword\">double</span> sf  <span class=\"token operator\">=</span> <span class=\"token number\">.123</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 或者 768.0f</span>\n\t\t<span class=\"token comment\">//科学计数法表示</span>\n\t\t<span class=\"token keyword\">double</span> kf <span class=\"token operator\">=</span> <span class=\"token number\">0.12345E-2</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">double</span> kf2 <span class=\"token operator\">=</span> <span class=\"token number\">0.12345e2</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>kf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\n\t\t<span class=\"token comment\">//浮点数陷阱</span>\n\t\t<span class=\"token comment\">//num1 不等于 num2</span>\n\t\t<span class=\"token keyword\">double</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//2,7</span>\n\t\t<span class=\"token keyword\">double</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">8.1</span><span class=\"token operator\">/</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2.6999999999999997</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num1<span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span><span class=\"token operator\">+</span>num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">//如果需要进行判断，可以通过判断差值的绝对值是否在某一范围内进行判断</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>num1<span class=\"token operator\">-</span>num2<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0.000001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num1==num2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\n\t\t<span class=\"token comment\">//字符</span>\n\t\t<span class=\"token keyword\">char</span> s <span class=\"token operator\">=</span> <span class=\"token char\">'d'</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\">//字符可以存储数字</span>\n\t\t<span class=\"token keyword\">char</span> s1 <span class=\"token operator\">=</span> <span class=\"token number\">99</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//输出字符对应ASCll码</span>\n\t\t<span class=\"token keyword\">int</span> st <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token number\">3886</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"基本数据类型转换\"><a href=\"#基本数据类型转换\" class=\"headerlink\" title=\"基本数据类型转换\"></a>基本数据类型转换</h2><h3 id=\"自动转换\"><a href=\"#自动转换\" class=\"headerlink\" title=\"自动转换\"></a>自动转换</h3><p><strong>类型基本转换顺序：</strong></p>\n<ol>\n<li>char-&gt;int-&gt;long-&gt;float-&gt;double</li>\n<li>byte-&gt;short-&gt;int-&gt;long-&gt;float-&gt;double</li>\n</ol>\n<p>正确例子：int a = ‘c’； √</p>\n<p>​        double d = 80;  √</p>\n<p>错误例子：</p>\n<p>​    </p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> autoDetail\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//转换错误例子</span>\n\t\t<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span><span class=\"token number\">23</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//当出现浮点数运算时，系统会自动将所有数据转换为最大容量的数据</span>\n\t\t\n\t\t<span class=\"token comment\">//float f = num + 1.1;//Error 会因此转换为double</span>\n\t\t\n\t\t<span class=\"token comment\">//解决方法</span>\n\t\t<span class=\"token keyword\">float</span> f <span class=\"token operator\">=</span> num <span class=\"token operator\">+</span> <span class=\"token number\">1.1F</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>Detail：</strong></p>\n<ol>\n<li>当出现多种类型的数据混合运算时，系统自动将所有数据转换为最大容量的数据类型后，再进行运算。</li>\n<li>不能将大容量的数据赋值给小容量的数据类型</li>\n<li>byte和short与char不会出现自动转换</li>\n<li>Boolean不参加转换</li>\n<li>表达式的结果类型自动提升为操作数最大的数据类型</li>\n<li>byte、short、char、三者可以进行技术，在计算时首先转换为int类型</li>\n<li>表达式结果的类型自动提升为操作数最大的类型</li>\n</ol>\n<h3 id=\"强制转换\"><a href=\"#强制转换\" class=\"headerlink\" title=\"强制转换\"></a>强制转换</h3><p><strong>注意：</strong></p>\n<p>​    </p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> autoDetail\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\n\t\t<span class=\"token comment\">//1</span>\n\t\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token number\">3.3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//造成精度损失</span>\n\n\t\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">1200</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">byte</span> c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span>b<span class=\"token punctuation\">;</span> <span class=\"token comment\">//造成数据溢出</span>\n\n\t\t<span class=\"token comment\">//2</span>\n\t\t<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">char</span> s <span class=\"token operator\">=</span> num<span class=\"token punctuation\">;</span><span class=\"token comment\">//error</span>\n\t\t<span class=\"token keyword\">char</span> s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>num<span class=\"token punctuation\">;</span> <span class=\"token comment\">//ok</span>\n\n\t\t<span class=\"token comment\">//3</span>\n\t\t<span class=\"token keyword\">byte</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">short</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">byte</span> num3 <span class=\"token operator\">=</span> num1<span class=\"token operator\">+</span>num2<span class=\"token punctuation\">;</span><span class=\"token comment\">//error</span>\n\t\t<span class=\"token keyword\">int</span> num3 <span class=\"token operator\">=</span> num1<span class=\"token operator\">+</span>num2<span class=\"token punctuation\">;</span><span class=\"token comment\">//ok</span>\n\t<span class=\"token punctuation\">&#125;</span>\t\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>​    <strong>Detail:</strong></p>\n<ol>\n<li>强转符只对最近操作符有效，往往使用小括号提升优先级</li>\n<li><strong>char类型可以保存int常量值，但不能保存int的变量值，需要强转</strong></li>\n<li>byte和short类型在进行运算时，当做int类型处理</li>\n</ol>\n<h3 id=\"String类型\"><a href=\"#String类型\" class=\"headerlink\" title=\"String类型\"></a>String类型</h3><p><strong>基本数据类型转String类型</strong></p>\n<p><strong>通过 变量+” “ 进行字符串类型转换</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> autoDetail\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\n\t\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">33</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\n\t<span class=\"token punctuation\">&#125;</span>\t\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>String类型转基本数据类型</strong></p>\n<p>转int类型： Integer.parseInt(变量)</p>\n<p>转double类型：Double.parseDouble(变量)</p>\n<p>转float类型:Float.parseFloat(变量)</p>\n<p>转long类型：Long.parseLong(变量)</p>\n<p>转byte类型：Byte.parseByte(变量)</p>\n<p>转short类型：Short.parseShort(变量)</p>\n<p>转Boolean类型：Boolean.parseBoolean(变量)</p>\n<p><strong>转char类型：转char需要通过 charAt方法</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> autoDetail\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\n\t\t<span class=\"token class-name\">String</span> s <span class=\"token operator\">=</span> <span class=\"token string\">\"123\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span><span class=\"token class-name\">Double</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseDouble</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">float</span> f <span class=\"token operator\">=</span><span class=\"token class-name\">Float</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">long</span> e <span class=\"token operator\">=</span> <span class=\"token class-name\">Long</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseLong</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">byte</span> g <span class=\"token operator\">=</span> <span class=\"token class-name\">Byte</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseByte</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">short</span> x <span class=\"token operator\">=</span><span class=\"token class-name\">Short</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseShort</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n\t\t<span class=\"token keyword\">boolean</span> r <span class=\"token operator\">=</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseBoolean</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\n\t<span class=\"token punctuation\">&#125;</span>\t\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>注意：字符串如”hello“这种无法转换为整数浮点数之类的</strong></p>\n<h2 id=\"Java-API文档\"><a href=\"#Java-API文档\" class=\"headerlink\" title=\"Java API文档\"></a>Java API文档</h2><p>地址链接：<a href=\"https://www.matools.com/\">https://www.matools.com</a></p>\n<p>每个API都有类、接口、异常</p>\n<h1 id=\"java学习第5天\"><a href=\"#java学习第5天\" class=\"headerlink\" title=\"java学习第5天\"></a>java学习第5天</h1><h2 id=\"算数运算符\"><a href=\"#算数运算符\" class=\"headerlink\" title=\"算数运算符\"></a>算数运算符</h2><ol>\n<li><p>+运算符</p>\n</li>\n<li><p>-运算符</p>\n</li>\n<li><p>*运算符</p>\n</li>\n<li><p>/整除运算符</p>\n<ol>\n<li>```java<br>double a = 10 / 4; // 2.0<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n2. &#96;&#96;&#96;java\n   double a &#x3D; 10.0 &#x2F; 4; &#x2F;&#x2F; 2.5<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n</li>\n<li><p>%取余运算符</p>\n<ol>\n<li>```java<br>int a = 10 % 8; //2<br>int b = -10 % 8; //-2<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n6. ++自增运算符\n\n   1. 先自增后运算  ++i\n\n   2. 先运算后自增 i++\n\n   3. &#96;&#96;&#96;java\n      int a &#x3D; 1;\n      int b &#x3D; a++;&#x2F;&#x2F;1\n      int c &#x3D; ++a;&#x2F;&#x2F;3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n</li>\n<li><p>–自减运算符</p>\n<ol>\n<li><p>先自减后运算  –i</p>\n</li>\n<li><p>先运算后自减 i–</p>\n</li>\n<li><p>```java<br>int a = 2;<br>int b = a–;//2<br>int c = –a;//0</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n## 关系运算符（relational）\n\n1. &#x3D;&#x3D;判断相等运算符\n\n   1. &#96;&#96;&#96;java\n      System.out.println(12 &#x3D;&#x3D; 11)&#x2F;&#x2F; false<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n</li>\n<li><p>!=判断不等运算符</p>\n<ol>\n<li>```java<br>System.out.println(12 != 11)// true<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n3. &lt; 小于运算符\n\n   1. &#96;&#96;&#96;java\n      System.out.println(12 &lt; 11)&#x2F;&#x2F; flase<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n</li>\n<li><p>&gt; 大于运算符</p>\n<ol>\n<li>```java<br>System.out.println(12 &gt; 11)// true<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n5. \\&gt;&#x3D; 大于等于运算符\n\n   1. &#96;&#96;&#96;java\n      System.out.println(12 &gt;&#x3D; 11)&#x2F;&#x2F; true\n      System.out.println(12 &gt;&#x3D; 12)&#x2F;&#x2F; true<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n</li>\n<li><p>&lt;= 小于等于运算符</p>\n<ol>\n<li>```java<br>System.out.println(12 &lt;= 11)// false<br>System.out.println(12 &lt;= 12)// true<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n      \n\n## 逻辑运算符          （logic）\n\n1. 与 （两个都为true则为true，其他情况都为false）\n\n   1. 短路与 &amp;&amp; （当第一个条件为false，后面的条件不再进行判断） \n   2. 逻辑与 &amp; （当第一个条件为false，后面的条件还会进行判断）\n\n   \n\n2. 或 （有一个为true则为true,只有都为false时才为false）\n\n   1. 短路或 ||（当第一个条件为true，后面的条件不再进行判断）\n\n   2. 逻辑或 |（当第一个条件为true，后面的条件还会进行判断）\n\n   3. 逻辑异或 ^（两边不同为true，两边相同为false）\n\n      1. &#96;&#96;&#96;java \n         boolean a &#x3D; (10 &gt; 3) ^ (3 &gt; 5);&#x2F;&#x2F;true\n         \n         boolean b &#x3D; (10 &gt; 3) ^ (3 &gt; 1);&#x2F;&#x2F;false<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</li>\n</ol>\n</li>\n<li><p>非 ！（真变假，假变真）</p>\n<ol>\n<li>```java<br>boolean a = false;<br>System.out.println(!a);//trueSystem.out.println(!!a);//false<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n      \n\n## 复合赋值运算符\n\n**特点：**\n\n1. 复合运算符会进行类型转换\n\n   1. &#96;&#96;&#96;java\n      int a &#x3D; 3;\n      a+&#x3D;4;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n</li>\n<li><p>运算顺序从左至右</p>\n</li>\n<li><p>int a = 3；a+=3；等价于 a=a+3;</p>\n</li>\n<li><p>赋值运算符的左边只能是变量，右边 可以是变量、表达式、常量值</p>\n</li>\n</ol>\n<p><strong>种类：</strong></p>\n<ol>\n<li><p>+=   复合加  </p>\n<ol>\n<li>```java<br>int a = 10;<br>a+=1;//a = a+1;<br>//其他与之类似<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n2. -&#x3D; 复合减\n\n3. *&#x3D; 复合乘\n\n4. &#x2F;&#x3D; 复合除\n\n5. %&#x3D; 复合取模\n\n## 三元运算符     （Temary）\n\n&#96;&#96;&#96;java\nint a &#x3D; 10;\nint b &#x3D;5;\nint resublt &#x3D; a&gt;b?a:b;\n&#x2F;&#x2F;类似于if语句，如果a&gt;b返回true则等于a，否则等于b<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n</li>\n</ol>\n<p><strong>Detail：</strong></p>\n<ol>\n<li>三元运算符的结果可以赋值给接收变量的类型（会自动转换）</li>\n</ol>\n<h2 id=\"运算符优先级\"><a href=\"#运算符优先级\" class=\"headerlink\" title=\"运算符优先级\"></a>运算符优先级</h2><p><img src=\"C:\\Users\\木子李\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220726164801928.png\" alt=\"image-20220726164801928\"></p>\n<ol>\n<li>()  ,  { } 等</li>\n<li>单目运行 ++ –</li>\n<li>算术运算符</li>\n<li>位移运算符</li>\n<li>比较运算符</li>\n<li>逻辑运算符</li>\n<li>三元运算符</li>\n<li>赋值运算符</li>\n</ol>\n<h2 id=\"标识符命名规则与规范\"><a href=\"#标识符命名规则与规范\" class=\"headerlink\" title=\"标识符命名规则与规范\"></a>标识符命名规则与规范</h2><p>对各种变量，方法，类，函数，凡是自己起的名字都叫标识符 int num = 3；</p>\n<p><strong>标识符命名规则：</strong></p>\n<ol>\n<li>由26个英文字母大小写组成，1-9，_ 或者 $符号组成</li>\n<li>标识符不能以数字开头</li>\n<li>标识符名称不可以是保留字或者关键字</li>\n<li>标识符严格区分大小写，命名长度无限制</li>\n<li>标识符命名两个字母之间不能包含空格</li>\n</ol>\n<p><strong>标识符命名规范：</strong></p>\n<ol>\n<li><p>尽量用英文或组合英文命名，做到见名知意</p>\n</li>\n<li><p>包名：多单词组成，所有字母都小写，单词之间用 . 拼接    例 aaa.bbb.ccc</p>\n</li>\n<li><p>变量名，方法名，多单词组成时从第二个单词开始首字母大写  例 iLoveYou</p>\n</li>\n<li><p>常量名 所有字母都大写，单词之间用_分割 例 AAA_BBB_CCC</p>\n</li>\n<li><p>类名，所有单词组合，每个单词首字母都大写  例 MoveClick</p>\n</li>\n</ol>\n<h1 id=\"java学习第6天\"><a href=\"#java学习第6天\" class=\"headerlink\" title=\"java学习第6天\"></a>java学习第6天</h1><h2 id=\"键盘输入（Scanner）\"><a href=\"#键盘输入（Scanner）\" class=\"headerlink\" title=\"键盘输入（Scanner）\"></a>键盘输入（Scanner）</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span><span class=\"token comment\">//引入包</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloScanner</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//创建Scanner对象,设置输入方式为键盘输入</span>\n\t\t<span class=\"token class-name\">Scanner</span> myScanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">//输入姓名</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入名字\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t\t<span class=\"token comment\">//输入年龄,只能输入int类型的数据</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入年龄\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\">//输入薪资，设置只能输入double类型数据</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入薪资\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">double</span> salary <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">//展示</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name=\"</span><span class=\"token operator\">+</span>name<span class=\"token operator\">+</span><span class=\"token string\">\" gae=\"</span><span class=\"token operator\">+</span>age<span class=\"token operator\">+</span><span class=\"token string\">\" salary=\"</span><span class=\"token operator\">+</span>salary<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>后期不常用，只在前期做测试用</p>\n<h2 id=\"进制\"><a href=\"#进制\" class=\"headerlink\" title=\"进制\"></a>进制</h2><h3 id=\"四种进制数\"><a href=\"#四种进制数\" class=\"headerlink\" title=\"四种进制数\"></a>四种进制数</h3><ol>\n<li>2进制数（BIN），满二进一，0d+数字表示</li>\n<li>10进制（DEC）；满十进一，日常用进制数，直接数字表示</li>\n<li>8进制（OCT）；满八进一，0+数字 表示</li>\n<li>16进制（HEX）； 满十六进一，从9开始为A、B、C、D、E、F来表示10到15，0x+数字表示</li>\n</ol>\n<h3 id=\"进制的基本转换\"><a href=\"#进制的基本转换\" class=\"headerlink\" title=\"进制的基本转换\"></a>进制的基本转换</h3><h4 id=\"其他进制转十进制\"><a href=\"#其他进制转十进制\" class=\"headerlink\" title=\"其他进制转十进制\"></a>其他进制转十进制</h4><ol>\n<li>二进制转十进制<ol>\n<li>从最低位开始（右边）将每个位上的数提取出来并乘以2的（位数-1）次方并与之后以此求出的数相加</li>\n<li>例：01001001  =&gt;1*2(1-1次方)+1*2(4-1次方)+1*2(7-1次方) =1+8+64 </li>\n</ol>\n</li>\n<li>八进制转十进制<ol>\n<li>从最低位开始（右边）将每个位上的数提取出来并乘以8的（位数-1）次方并与之后以此求出的数相加</li>\n<li>例：01234 =&gt;4*8^0+3*8^1+2*8^2+1*8^3</li>\n</ol>\n</li>\n<li>十六进制转十进制<ol>\n<li>从最低位开始（右边）将每个位上的数提取出来并乘以16的（位数-1）次方并与之后以此求出的数相加</li>\n<li>例：01A =&gt;10*16^0 + 1*16^1</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"十进制转其他进制\"><a href=\"#十进制转其他进制\" class=\"headerlink\" title=\"十进制转其他进制\"></a>十进制转其他进制</h4><ol>\n<li>十进制转二进制<ol>\n<li>该数不断除以2，直到商为0为止，最后将每步余数倒过来，不够8位左边补0即可</li>\n<li>23 =&gt;`00010111</li>\n<li>操作如下图所示（其他转换以此类推）：<img src=\"C:\\Users\\木子李\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220727134037971.png\" alt=\"image-20220727134037971\"></li>\n</ol>\n</li>\n<li>十进制转八进制<ol>\n<li>该数不断除以8，直到商为0为止，最后将每步余数倒过来，不够8位左边补0即可</li>\n<li>27 =&gt; 00000033</li>\n</ol>\n</li>\n<li>十进制转16进制<ol>\n<li>该数不断除以16，直到商为0为止，最后将每步余数倒过来，不够8位左边补0即可</li>\n<li>33 =&gt; 21</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"二进制转其他进制\"><a href=\"#二进制转其他进制\" class=\"headerlink\" title=\"二进制转其他进制\"></a>二进制转其他进制</h3><ol>\n<li>二进制转八进制<ol>\n<li>从低位开始，将二进制每三位分为一组转换为对应的八进制数就好了</li>\n<li>0b11001101 =&gt; 11/001/101 =&gt; 3/1/5 =&gt; 0315 =&gt;205 </li>\n</ol>\n</li>\n<li>二进制转十六进制<ol>\n<li>从低位开始，将二进制每四位分为一组转换为对应的八进制数就好了</li>\n<li>0b11001101 =&gt; 1100/1101 =&gt; C/D =&gt;205</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"八进制、十六进制转二进制\"><a href=\"#八进制、十六进制转二进制\" class=\"headerlink\" title=\"八进制、十六进制转二进制\"></a>八进制、十六进制转二进制</h3><ol>\n<li>八进制转二进制<ol>\n<li>将八进制数每一位转为对应的三位二进制数，逆推总会吧</li>\n<li>0315 =&gt; 3(011)1(001)5(101) =&gt; 011001101 =&gt;205</li>\n</ol>\n</li>\n<li>十六进制转二进制<ol>\n<li>将十六进制数每一位转为对应的四位二进制数，逆推总会吧</li>\n<li>0xCD =&gt; C(1100) D(1101) =&gt;11001101 =&gt;205</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"原码、反码、补码\"><a href=\"#原码、反码、补码\" class=\"headerlink\" title=\"原码、反码、补码\"></a>原码、反码、补码</h2><ol>\n<li>二进制的最高位是符号为：0表示正数，1表示负数</li>\n<li>正数的原码、反码、补码都一样（三码合一）</li>\n<li>负数的反码 = 其原码符号位不变其他位取反，1-&gt;0  ,  0 -&gt; 1</li>\n<li>负数的补码 = 其反码+1 ， 负数的反码 = 负数的补码 -1</li>\n<li>0的反码，补码都是0</li>\n<li>Java没有无符号位，Java的数都是有符号的</li>\n<li>计算机都是以补码的形式来运算的</li>\n<li><strong>当我们看运算结果时候，要看它的原码（重点）</strong></li>\n</ol>\n<h2 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符\"></a>位运算符</h2><ol>\n<li><p>按位与 &amp;</p>\n<ol>\n<li><p>两位全为1，结果为1，否则为0</p>\n</li>\n<li><p>```java<br>//示例+计算机求解过程<br>//获取3的原码  00000000 00000000 00000000 00000011<br>//获取4的原码  00000000 00000000 00000000 00000100<br>//符号为是0，正数三码一体，直接按位或<br>//按位或后的原码 00000000 00000000 00000000 00000000  结果为0<br>System.out.println(3&amp;4);//0</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n      \n\n2. 按位或 |\n\n   1. 两位有一位为1，则为1，否则为0\n\n   2. &#96;&#96;&#96;java\n      \t\t&#x2F;&#x2F;示例+计算机求解过程\n         \t\t&#x2F;&#x2F;获取2的原码  00000000 00000000 00000000 00000010\n         \t\t&#x2F;&#x2F;获取3的原码  00000000 00000000 00000000 00000011\n         \t\t&#x2F;&#x2F;符号位为0，三码一体\n         \t\t&#x2F;&#x2F;按位或运算   00000000 00000000 00000000 00000011\n         \t\tSystem.out.println(2|3);&#x2F;&#x2F;3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n</li>\n<li><p>按位异或 ^</p>\n<ol>\n<li><p>两位一个为0，一个为1，结果为1，否则为0</p>\n</li>\n<li><p>```java</p>\n<pre><code>    //示例+计算机求解过程\n       //获取2的原码  00000000 00000000 00000000 00000010\n       //获取3的原码  00000000 00000000 00000000 00000011\n       //符号位为0，三码一体\n       //按位异或运算   00000000 00000000 00000000 00000001\n       System.out.println(2^3);//1\n</code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n4. 按位取反 ~\n\n   1. 1-&gt;0  0-&gt;1\n\n   2. &#96;&#96;&#96;java\n      \t\t&#x2F;&#x2F;示例+计算机求解过程\n         \t\t&#x2F;&#x2F;获取原码 10000000 00000000 00000000 00000011\n         \t\t&#x2F;&#x2F;获取反码 11111111 11111111 11111111 11111100 反码等于原码取反，符号位不变\n         \t\t&#x2F;&#x2F;通过反码获取补码 11111111 11111111 11111111 11111101 补码等于反码+1\n         \t\t&#x2F;&#x2F;通过按位取反运算 00000000 00000000 00000000 00000010\n         \t\tSystem.out.println(~-3);&#x2F;&#x2F;因为正数三码一体，所以结果为2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li><p>```java</p>\n<pre><code>    //获取原码 00000000 00000000 00000000 00000011\n       //因为正数三码一体，直接按位取反运算 11111111 11111111 11111111 11111100\n       //获取取反后的原码 补码-1等于反码，获取反码 11111111 11111111 11111111 11111011\n       //反码取反获取原码 10000000 00000000 00000000 00000100\n       System.out.println(~3);//结果为-4\n</code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n5. 算术右移  &gt;&gt;  ： 低位溢出，符号位不变， 并用符号位补溢出的高位\n\n6. 算术左移 &lt;&lt;   :    符号位不变，低位补0\n\n7. 逻辑右移 \\&gt;&gt;&gt;，又叫无符号右移，低位溢出，高位补0，符号位跟随移动\n\n8. 注意：没有逻辑左移 \\&lt;&lt;&lt;\n\n9. &#96;&#96;&#96;java\n   \t\tint a &#x3D; 1&gt;&gt;2;&#x2F;&#x2F;  00000001 -&gt; 00000000 -&gt; 1&#x2F;2&#x2F;2 结果为0 \n      \t\tint b &#x3D; -1&gt;&gt;2;&#x2F;&#x2F;  00000001 -&gt; 先求反码 11111110 -&gt;再求补码 -&gt; 11111111 -&gt;右位移 11111111 取反码转原码 -&gt; 11111110 -&gt; 00000001 -&gt; -1  \n      \t\tint c &#x3D; 1&lt;&lt;2; &#x2F;&#x2F; 00000001 -&gt; 00000100 -&gt; 1*2*2 结果为 4\n      \t\tint d &#x3D; -1&lt;&lt;2;&#x2F;&#x2F; 10000001 -&gt; 先求反码 11111110 -&gt;再求补码 -&gt; 11111111 -&gt;左位移 11111100 取反码转原码 -&gt; 11111011 -&gt; 00000100 -&gt; -4  \n      \t\tint e &#x3D; 3&gt;&gt;&gt;2; &#x2F;&#x2F; 00000011 -&gt; 00000000 -&gt; 3&#x2F;2&#x2F;2 结果为0\n      \t\tint f &#x3D; -3&gt;&gt;&gt;2; &#x2F;&#x2F;现在的我，明白为什么，希望以后的我也明白  结果为 1073741823\n      \t\tSystem.out.println(a+&quot;,&quot;+b+&quot;,&quot;+c+&quot;,&quot;+d+&quot;,&quot;+e+&quot;,&quot;+f+&quot;,&quot;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h1 id=\"Java学习第七-八-天\"><a href=\"#Java学习第七-八-天\" class=\"headerlink\" title=\"Java学习第七(八)天\"></a>Java学习第七(八)天</h1><h2 id=\"顺序控制\"><a href=\"#顺序控制\" class=\"headerlink\" title=\"顺序控制\"></a>顺序控制</h2><p>程序从上到下的执行，中间没有任何的判断和跳转</p>\n<p>形式：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> num<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"分支语句（if-else）\"><a href=\"#分支语句（if-else）\" class=\"headerlink\" title=\"分支语句（if-else）\"></a>分支语句（if-else）</h2></li>\n</ol>\n<h3 id=\"单分支语句\"><a href=\"#单分支语句\" class=\"headerlink\" title=\"单分支语句\"></a>单分支语句</h3><p>​        if（条件表达式）{</p>\n<p>​                执行语句块1</p>\n<p>}else{</p>\n<p>​            执行语句块2    </p>\n<p>}</p>\n<p>​        当条件表达式为true时会执行语句块1中的代码，如果语句块中只有一条语句可以省略{ }</p>\n<p>​        当条件语句为false时会执行语句块2中的代码，如果没有else，则跳过</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">If01</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\t\n\t\t<span class=\"token class-name\">Scanner</span> <span class=\"token class-name\">Sc</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token class-name\">Sc</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num<span class=\"token operator\">>=</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"你的年龄已经大于18要对自己负责\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"还是个孩子？把你家长叫来！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"多分支语句\"><a href=\"#多分支语句\" class=\"headerlink\" title=\"多分支语句\"></a>多分支语句</h3><p>if（条件表达式1）{</p>\n<p>​                执行语句块1</p>\n<p>}else if(条件表达式2){</p>\n<p>​            执行语句块2    </p>\n<p>}else if(条件表达式3){</p>\n<p>​            执行语句块3    </p>\n<p>}else …if(条件表达式n){</p>\n<p>​        执行语句块n</p>\n<p>}else{</p>\n<p>​        执行语句块n+1</p>\n<p>}</p>\n<p>当条件表达式1不符合时会往后执行，其他条件表达式如果都不符合则执行else中的代码块语句</p>\n<p>注：多分支语句可以没有else，如果所有语句都不支持且没有else，则跳过所有语句。注意只能有一个执行入口（所有分支语句只有一个会执行或者全部不执行直接执行else）</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//来猜猜它会输出什么</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">If03</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Boolean</span> b <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">==</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"嵌套语句\"><a href=\"#嵌套语句\" class=\"headerlink\" title=\"嵌套语句\"></a>嵌套语句</h3><p>if(){</p>\n<p>​    if(){</p>\n<p>​        </p>\n<p>​    }else{</p>\n<p>​    </p>\n<p>​    }</p>\n<p>}</p>\n<p>嵌套实例：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span>  <span class=\"token class-name\">If04</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Scanner</span> myScanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\n\t\t<span class=\"token comment\">//分数系统</span>\n\t\t\n\t\t<span class=\"token comment\">/*int source = myScanner.nextInt();\n\n\t\tif(60&lt;=source &amp;&amp; source&lt;=100)&#123;\n\t\t\tif(90&lt;=source &amp; &amp;source&lt;=100)&#123;\n\t\t\t\tSystem.out.println(\"A\");\n\t\t\t&#125;else if(80&lt;=source &amp;&amp; source&lt;90)&#123;\n\t\t\t\tSystem.out.println(\"B\");\n\t\t\t&#125;else if(70&lt;=source &amp;&amp; source&lt;80)&#123;\n\t\t\t\tSystem.out.println(\"C\");\n\t\t\t&#125;else if(60&lt;=source &amp;&amp; source&lt;70)&#123;\n\t\t\t\tSystem.out.println(\"D\");\n\t\t\t&#125;\n\t\t&#125;else if(source&lt;60)&#123;\n\t\t\tSystem.out.println(\"为什么没及格呢？\");\n\t\t&#125;else&#123;\n\t\t\tSystem.out.println(\"输入有误！\");\t\n\t\t&#125;*/</span>\n\n\t\t<span class=\"token comment\">//旅游系统</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入年龄\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入月份\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> month <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>month <span class=\"token operator\">>=</span> <span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> month <span class=\"token operator\">&lt;=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>age<span class=\"token operator\">>=</span><span class=\"token number\">18</span> <span class=\"token operator\">&amp;&amp;</span> age<span class=\"token operator\">&lt;=</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您的票价为60元\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>age<span class=\"token operator\">&lt;</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您的票价为30元\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>age<span class=\"token operator\">></span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您的票价为20元\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您的输入有误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>month<span class=\"token operator\">></span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入有误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>age<span class=\"token operator\">>=</span><span class=\"token number\">18</span> <span class=\"token operator\">&amp;&amp;</span> age<span class=\"token operator\">&lt;=</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您的票价为40元\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>age<span class=\"token operator\">&lt;</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您的票价为20元\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>age<span class=\"token operator\">></span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您的票价为20元\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"您的输入有误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"switch语句\"><a href=\"#switch语句\" class=\"headerlink\" title=\"switch语句\"></a>switch语句</h3><p>switch(表达式){</p>\n<p>​    case 常量1：</p>\n<p>​        执行语句1；</p>\n<p>​        break；</p>\n<p>​    case 常量2：</p>\n<p>​        执行语句2；</p>\n<p>​        break；</p>\n<p>​    case 常量3：</p>\n<p>​        执行语句3；</p>\n<p>​        break；</p>\n<p>​    case 常量n：</p>\n<p>​        执行语句n；</p>\n<p>​        break；</p>\n<p>​    default：</p>\n<p>​        执行语句；</p>\n<p>​        break；</p>\n<p>}</p>\n<p>注解：</p>\n<ol>\n<li>通过判断表达式的结果是否等于常量进行语句执行，如果表达式等于case的常量则执行下面的语句，如果不等于，则跳到下一个case与常量进行比较，最终输出结果</li>\n<li>如果case中的常量都不匹配，则会执行default中的语句，default是可选的，同时里面的break语句也是可选的。</li>\n<li>case中的break语句不能删除，如果删除会出现穿透的效果</li>\n</ol>\n<p>示例：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>Scanner<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Switch01</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">String<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args</span><span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\tScanner myScanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入对应字母\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t\t\n\t\tString letter <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\n\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>letter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'a'</span><span class=\"token operator\">:</span>\n\t\t\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'b'</span><span class=\"token operator\">:</span>\n\t\t\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'c'</span><span class=\"token operator\">:</span>\n\t\t\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'d'</span><span class=\"token operator\">:</span>\n\t\t\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'e'</span><span class=\"token operator\">:</span>\n\t\t\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"E\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'f'</span><span class=\"token operator\">:</span>\n\t\t\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"F\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\t\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'g'</span><span class=\"token operator\">:</span>\n\t\t\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"G\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t\tSystem<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"other\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>注意：</strong></p>\n<ol>\n<li>常量的数据类型需要与表达式类型相同，或者常量与表达式之间的数据类型可以自动转换</li>\n<li>case中的常量不可以与变量发现任何运算关系，即常量不能是变量，同时常量无法使用比较运算符</li>\n<li>表达式的类型必须是（byte、short、int、char、enum（枚举）、String）这六种，常量类型需与之匹配</li>\n</ol>\n<h3 id=\"穿透的使用\"><a href=\"#穿透的使用\" class=\"headerlink\" title=\"穿透的使用\"></a>穿透的使用</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Switch03</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Scanner</span> myScanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入对应月份\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t\t\n\t\t<span class=\"token keyword\">int</span> month <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>month<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"春季\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"夏季\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">9</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">10</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">11</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"秋季\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">12</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"冬季\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入有误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"if和switch的使用选择\"><a href=\"#if和switch的使用选择\" class=\"headerlink\" title=\"if和switch的使用选择\"></a>if和switch的使用选择</h3><ol>\n<li>出现多Boolean类型或者运算范围较大的情况下，建议使用if语句</li>\n<li>出现多选择性且数据类型在 （byte、short、int、char、enum（枚举）、String）这六种数据类型中，可以使用switch</li>\n</ol>\n<h1 id=\"java学习第九天\"><a href=\"#java学习第九天\" class=\"headerlink\" title=\"java学习第九天\"></a>java学习第九天</h1><h2 id=\"for循环控制语句\"><a href=\"#for循环控制语句\" class=\"headerlink\" title=\"for循环控制语句\"></a>for循环控制语句</h2><p>for（循环变量初始化；循环条件；循环变量迭代）{</p>\n<p>​    循环操作（可以多条语句）；</p>\n<p>}</p>\n<p>注解：</p>\n<ol>\n<li>for关键字，表示循环控制</li>\n<li>for循环的四个要素：循环变量初始化、循环条件、循环变量迭代、循环操作</li>\n<li>for循环{}内可以有多条语句，也就是我们要循环操作多次的语句</li>\n<li>for循环中如果只有一条需要操作的语句，可以省略{}但不建议省略</li>\n</ol>\n<p>示例：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span>  <span class=\"token class-name\">For01</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Detail\"><a href=\"#Detail\" class=\"headerlink\" title=\"Detail\"></a>Detail</h3><ol>\n<li><p>循环条件返回的是一个Boolean值，为true进行循环，为false时停止循环</p>\n</li>\n<li><p>for循环中变量初始化和变量迭代可以写在其他地方，但两边分号；不能省</p>\n<ol>\n<li>```javascript<br>class  For01<br>{<pre><code>public static void main(String[] args) \n&#123;    int i =1；\n    for( ; i&lt;=10; ; )&#123;\n        System.out.println(&quot;Hello World!&quot;);    \n        i++;\n    &#125;\n&#125;\n</code></pre>\n}<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n3. 循环初始值可以有多个，但要求数据类型相同且中间需要通过逗号，隔开，循环变量迭代也可以多个，中间用，隔开\n\n   1. &#96;&#96;&#96;java\n      class  For01\n      &#123;\n      \tpublic static void main(String[] args) \n      \t&#123;\n      \t\tfor(int i &#x3D;1,j &#x3D; 0;i&lt;&#x3D;10;i++,j++)&#123;\n      \t\t\tSystem.out.println(&quot;j&#x3D;&quot;+j+&quot;i&#x3D;&quot;+i);\t\n      \t\t&#125;\n      \t&#125;\n      &#125;\n      <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n</li>\n</ol>\n<h3 id=\"for循环与if语句运算符的结合\"><a href=\"#for循环与if语句运算符的结合\" class=\"headerlink\" title=\"for循环与if语句运算符的结合\"></a>for循环与if语句运算符的结合</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">For02</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\t\n\t\t<span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\tsum<span class=\"token operator\">+=</span>i<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">9</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sum=\"</span><span class=\"token operator\">+</span>sum<span class=\"token operator\">+</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"for循环自增与自减结合\"><a href=\"#for循环自增与自减结合\" class=\"headerlink\" title=\"for循环自增与自减结合\"></a>for循环自增与自减结合</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span>  <span class=\"token class-name\">For03</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span>j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> i<span class=\"token operator\">+</span>j<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span><span class=\"token string\">\" + \"</span><span class=\"token operator\">+</span> j  <span class=\"token operator\">+</span><span class=\"token string\">\"= \"</span><span class=\"token operator\">+</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"While循环\"><a href=\"#While循环\" class=\"headerlink\" title=\"While循环\"></a>While循环</h2><p>循环变量初始化；</p>\n<p>While（循环条件）{</p>\n<p>​    循环体（语句）</p>\n<p>​    循环变量迭代；</p>\n<p>}</p>\n<p>注意事项:</p>\n<ol>\n<li>循环条件是返回一个布尔值的表达式</li>\n<li>while循环是先判断后执行，for循环是先执行后判断</li>\n</ol>\n<p>示例：</p>\n<p>​    </p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">While</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//打印1-100之间能被3整除的数</span>\n\t\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">3</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t\ti<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token comment\">//打印40-200之间的偶数</span>\n\t\t<span class=\"token keyword\">int</span> start <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> end <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\n\\n\\n\\n\\n\\n-----------------------------\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>start<span class=\"token operator\">&lt;=</span>end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>start<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t\tstart<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"do。。。while循环\"><a href=\"#do。。。while循环\" class=\"headerlink\" title=\"do。。。while循环\"></a>do。。。while循环</h2><p>循环变量初始化；</p>\n<p>do{</p>\n<p>​    循环体（语句）；</p>\n<p>​    循环变量（迭代）；</p>\n<p>}while（循环条件）<strong>；</strong></p>\n<p>注解说明：</p>\n<ol>\n<li>do while是关键字</li>\n<li>也有循环四要素但位置不一样</li>\n<li>dowhile循环是先执行后判断，无论如何都会执行一遍</li>\n<li>最后while那要加；</li>\n</ol>\n<p>示例代码：</p>\n<ol>\n<li>```java<br>//do while与if结合求1-200间能被5整除但不能被三整除的数的个数<br>class Dowhile01<br>{<pre><code>public static void main(String[] args) \n&#123;\n    int start = 1;\n    int end = 200;\n    int count = 0;\n    do&#123;\n        if(start%5==0 &amp;&amp; start%3!=0)&#123;\n            count++;\n            System.out.println(start);\n        &#125;\n        start++;\n    &#125;while(start&lt;=end);\n    \n    System.out.println(&quot;一共有&quot;+count+&quot;个&quot;);\n\n&#125;\n</code></pre>\n}<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n2. &#96;&#96;&#96;java\n   import java.util.Scanner;\n   class Dowhile02 \n   &#123;\n   \tpublic static void main(String[] args)&#123;\n   \t\tScanner myScanner &#x3D; new Scanner(System.in);\n   \t\tString str1;\n   \t\tdo&#123;\n   \t\t\tSystem.out.println(&quot;老王还不还钱？ y&#x2F;n&quot;);\n   \t\t\tstr1 &#x3D; myScanner.next();\n   \t\t&#125;while(str1.charAt(0)&#x3D;&#x3D;&#39;n&#39;);\t\n   \t&#125;\n   &#125;\n   <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h2 id=\"多重循环控制\"><a href=\"#多重循环控制\" class=\"headerlink\" title=\"多重循环控制\"></a>多重循环控制</h2><ol>\n<li><p>将一个循环放在另一个循环内，就形成了嵌套循环，其中for、while、do..while都可以做外层循环或者内层循环（建议最多两层，不要超过三层，不然会使可读性变差）</p>\n</li>\n<li><p>实质上，多重循环就是把内层循环当做外层循环的循环体，当内层循环为false时结束时当前内层循环返回外层循环，如果外层循环没有结束，则再次进行内层循环。</p>\n<p>简单来说，外层循环，循环几次，就会创建几个内层循环。</p>\n</li>\n</ol>\n<p>示例输出九九乘法表：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Fors01</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\t\n\t\t<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;=</span>i<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\tnum <span class=\"token operator\">=</span> i<span class=\"token operator\">*</span>j<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">+</span><span class=\"token string\">\" x \"</span><span class=\"token operator\">+</span>i<span class=\"token operator\">+</span><span class=\"token string\">\" = \"</span><span class=\"token operator\">+</span>num<span class=\"token operator\">+</span><span class=\"token string\">\"\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"java学习第10天\"><a href=\"#java学习第10天\" class=\"headerlink\" title=\"java学习第10天\"></a>java学习第10天</h1><h2 id=\"跳转控制语句-break\"><a href=\"#跳转控制语句-break\" class=\"headerlink\" title=\"跳转控制语句 break\"></a>跳转控制语句 break</h2><p>break：停止（跳出）当前循环</p>\n<ol>\n<li>不使用标签</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//当i == 5时停止循环，输出0，1，2，3，4</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Break</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">==</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>使用标签</li>\n</ol>\n<pre class=\"line-numbers language-JAVA\" data-language=\"JAVA\"><code class=\"language-JAVA\">&#x2F;&#x2F;2.输出五遍0，1，2，3，4\n\t\tabc1:\n\t\tfor(int j &#x3D;0;j&lt;10;j++)&#123;\n\n\t\t\tabc2:\n\t\t\t\tfor(int k&#x3D;0;k&lt;5;k++)&#123;\n\t\t\t\t\t\n\t\t\t\t\tif(j&#x3D;&#x3D;5)&#123;\n\t\t\t\t\t\tbreak abc1;\n\t\t\t\t\t&#125;\t\t\t\n\t\t\t\t\tSystem.out.println(k);\n\t\t\t&#125;\n\t\t&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Detail-1\"><a href=\"#Detail-1\" class=\"headerlink\" title=\"Detail\"></a>Detail</h3><ol>\n<li>break语句可以指定退出哪一层</li>\n<li>label是标签由程序员指定</li>\n<li>break指定到哪个label就停止哪个语句</li>\n<li>在实际开发中尽量不要使用</li>\n<li>如果没有指定label默认退出最近循环体</li>\n<li>登录系统（练习）</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Break01</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Scanner</span> myScanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">String</span> password <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入账号:\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tname <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入密码:\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tpassword <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\">//补充,变量名.equals(object) 判断当前变量值是否等于object,比较函数</span>\n\t\t\t<span class=\"token comment\">//推荐使用 object.equals(变量) 推荐使用这种，可以避免空指针</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"丁真\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token string\">\"666\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"登陆成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"密码或者账号输入错误,你还有\"</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"次机会\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">==</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"超过三次错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Continue\"><a href=\"#Continue\" class=\"headerlink\" title=\"Continue\"></a>Continue</h2><p>continue 与break使用方法相同，作用为跳过本次循环，而不是停止</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//当i == 5时停止循环，输出0，1，2，3，4，6，7，8，9</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Break</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">==</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"return\"><a href=\"#return\" class=\"headerlink\" title=\"return\"></a>return</h2><p>跳出当前方法，在后面学习方法时使用</p>\n<p>在main中使用表示退出程序</p>\n<h2 id=\"数组-Array\"><a href=\"#数组-Array\" class=\"headerlink\" title=\"数组 Array\"></a>数组 Array</h2><p>数组属于引用数据类型，即：数组就是一组同一类型的数据</p>\n<p>数组可以通过索引进行遍历与获取，数组的索引是从0开始的</p>\n<p>标识符   [ ]</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> hens <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6.7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8.9</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//double类型的数组</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>数组遍历</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">6</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>hens<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"数组的三种使用方式\"><a href=\"#数组的三种使用方式\" class=\"headerlink\" title=\"数组的三种使用方式\"></a>数组的三种使用方式</h3><ol>\n<li><p>数据类型[ ] 数组名 = new 数据类型[ ]  ===》 int[ ] a = new int[ 5 ]</p>\n<ol>\n<li><p>赋值方式：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//静态赋值</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//动态赋值</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n</li>\n<li><p>先声明  int[ ]  a ; 或者  int a[ ] ;     再创建 a = new int[10]</p>\n<ol>\n<li><p>赋值方式</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">;</span>\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n</ol>\n</li>\n<li><p>静态初始化</p>\n<ol>\n<li><p>赋值方式</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a  <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ol>\n</li>\n</ol>\n<h3 id=\"注意事项与Detail\"><a href=\"#注意事项与Detail\" class=\"headerlink\" title=\"注意事项与Detail\"></a>注意事项与Detail</h3><ol>\n<li>数据是多个相同类型数据的组合，包含会进行数据类型自动转换的数据</li>\n<li>数组中的元素可以放任何数据类型，包含基本类型和引用类型，不能混用</li>\n<li>数组创建后如果没有赋值，会拥有默认值，byte，short，int，long是0，float，double是0.0，char是\\u0000，String是null,Boolean是fa’l’se</li>\n<li>数组下标是从0开始的</li>\n<li>数组下标必须在指定范围内的，超出范围会报错：下标越界异常</li>\n<li>数组是一个引用类型，属于对象</li>\n</ol>\n<h3 id=\"数组赋值-Assign\"><a href=\"#数组赋值-Assign\" class=\"headerlink\" title=\"数组赋值 Assign\"></a>数组赋值 Assign</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ArrayAssign</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//基本数据类型赋值，赋值方式为值拷贝</span>\n\t\t<span class=\"token keyword\">int</span> n1 <span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> n2 <span class=\"token operator\">=</span>n1<span class=\"token punctuation\">;</span>\n\n\t\tn2 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n1=\"</span><span class=\"token operator\">+</span>n1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//10</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"n2=\"</span><span class=\"token operator\">+</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//1</span>\n\n\t\t<span class=\"token comment\">//数组中默认情况下属于引用传递，赋的值是地址，赋值方式为引用传递</span>\n\t\t<span class=\"token comment\">//因为共用一个地址，arr2的变化会影响到arr1</span>\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr2 <span class=\"token operator\">=</span> arr1<span class=\"token punctuation\">;</span>\n\n\t\tarr2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//10</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>数组的拷贝</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ArrayAssign</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> num1 <span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> num2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>num1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>num1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\tnum2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> num1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\tnum2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//1</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//10</span>\n\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>数组的反转</p>\n<ol>\n<li>```java<br>class ArrayAssign<br>{<pre><code>public static void main(String[] args) \n&#123;\n    int[] num1 =&#123;1,2,3,4,5&#125;;\n    int[] num2 = new int[num1.length];\n\n    for(int i =num1.length-1,j=0;i&gt;=0;i--,j++)&#123;\n        num2[j] = num1[i];\n    &#125;\n    for(int k=0;k&lt;num2.length;k++)&#123;\n        System.out.print(num2[k]);\n    &#125;\n\n&#125;\n</code></pre>\n}<pre class=\"line-numbers language-none\"><code class=\"language-none\">\n2. &#96;&#96;&#96;java\n   class ArrayAssign \n   &#123;\n   \tpublic static void main(String[] args) \n   \t&#123;\n   \t\tint[] num1 &#x3D;&#123;1,2,3,4,5&#125;;\n   \t\tint len &#x3D; num1.length;\n   \t\tfor(int i &#x3D;0;i&lt;len&#x2F;2;i++)&#123;\n   \t\t\tint temp &#x3D; num1[len-1-i];\n   \t\t\tnum1[len-1-i]&#x3D; num1[i];\n   \t\t\tnum1[i] &#x3D; temp;\n   \t\t&#125;\n   \t\tfor(int j &#x3D;0;j&lt;len;j++)&#123;\n   \t\t\tSystem.out.print(num1[j]);\n   \t\t&#125;\n   \t&#125;\n   &#125;\n   <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"数组扩展，添加\"><a href=\"#数组扩展，添加\" class=\"headerlink\" title=\"数组扩展，添加\"></a>数组扩展，添加</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ArrayAdd</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Scanner</span> myScanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">String</span> h<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\tarr1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入要添加的数\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tnum <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tarr1<span class=\"token punctuation\">[</span>arr1<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>num<span class=\"token punctuation\">;</span>\n\t\t\tarr <span class=\"token operator\">=</span> arr1<span class=\"token punctuation\">;</span>\n\t\t\t\n\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"还要添加吗？y/n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t h<span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token char\">'y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无效输入\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"数组缩减\"><a href=\"#数组缩减\" class=\"headerlink\" title=\"数组缩减\"></a>数组缩减</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ArrayReduce</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Scanner</span> myScanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">String</span> h<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">do</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>arr1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\tarr1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\tarr <span class=\"token operator\">=</span> arr1<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"缩减完成！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"还要缩减吗？y/n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t h<span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token char\">'y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token char\">'n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"无效输入\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"排序\"><a href=\"#排序\" class=\"headerlink\" title=\"排序\"></a>排序</h3><p>将多个数据按指定顺序排序</p>\n<p><strong>冒泡排序：</strong>存在n个元素则需要进行n-1轮比较，n-1轮可以看作外层循环，在每一轮确定一个最大数并放在最后，以此类推，比较时如果前面的数比后面的数大就交换位置，如果没有就以大的数做比较数进行比较，代码实现：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tarr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tarr<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>k<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>普通排序:</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//从大到小</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BubbleSort</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">14</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tarr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tarr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>k<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//从小到大</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BubbleSort</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">14</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tarr<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tarr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>k<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"查找-sequence\"><a href=\"#查找-sequence\" class=\"headerlink\" title=\"查找 sequence\"></a>查找 sequence</h2><ol>\n<li><p>顺序查找</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SeqSearch</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token class-name\">Scanner</span> myScanner <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">19</span><span class=\"token punctuation\">,</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">23</span><span class=\"token punctuation\">,</span><span class=\"token number\">14</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> step <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"输入要查找的数字\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> myScanner<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"找到该数字,它是第\"</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"个数字\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tstep <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>step<span class=\"token operator\">!=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"不存在数字\"</span><span class=\"token operator\">+</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"二维数组\"><a href=\"#二维数组\" class=\"headerlink\" title=\"二维数组\"></a>二维数组</h3><p>int[] arr[] <strong>or</strong> int[][] arr  <strong>or</strong> int arr[][]</p>\n<p><strong>创建方式：</strong></p>\n<ol>\n<li><p>初始化数组</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//创建一个二行三列数组</span>\n<span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li><p>先声明再定义</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//创建一个二行三列数组</span>\n<span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \narr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li><p><strong>二维数组的使用：</strong></p>\n</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">TwoArray</span> \n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> \n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//输出以下</span>\n\t\t<span class=\"token comment\">/*\n\t\t\t1\n\t\t\t22\n\t\t\t333\n\t\t\t4444\n\t\t\t55555\n\t\t*/</span>\n\n\t\t<span class=\"token keyword\">int</span> arr<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\tarr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t\t\tarr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li><p>静态初始化</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>注意：二维数组中父级数组中的元素必须是数组不能是直接元素（基本数据类型）</p>\n</li>\n<li><pre><code class=\"java\">int[][] arr = new int[][]&#123;&#123;1&#125;,&#123;2,2&#125;,&#123;3,&#125;&#125;\n</code></pre>\n</li>\n</ol>\n","feature":true,"text":"JAVAjava最早的版本诞生于1995年 目前长期支持的JDK版本为，8版和11版 java se 标准类库 java ee 企业类库 java的特点 java是面向对象编程 java的健壮性，强机制类型、异常处理、垃圾自动回收 跨平台性，通过 . java编译出的 . cla...","link":"","photos":[],"count_time":{"symbolsCount":"31k","symbolsTime":"28 mins."},"categories":[{"name":"Cate","slug":"Cate","count":4,"path":"api/categories/Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":4,"path":"api/tags/Tag.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JAVA\"><span class=\"toc-text\">JAVA</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#java%E7%9A%84%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">java的特点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#java%E7%9A%84%E8%BF%90%E8%A1%8C%E4%B8%8E%E7%BC%96%E8%AF%91\"><span class=\"toc-text\">java的运行与编译</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#java%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E5%A4%A9\"><span class=\"toc-text\">java学习第二天</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#javaJDK%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">javaJDK下载</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAjava%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">我的第一个java程序</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A1%A5%E5%85%85\"><span class=\"toc-text\">补充</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99java%E7%A8%8B%E5%BA%8F%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">编写java程序注意事项</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%B9%A0%E4%B8%80%E9%97%A8%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">学习一门语言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#java%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6\"><span class=\"toc-text\">java转义字符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#java%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">java注释</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#java%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E5%A4%A9\"><span class=\"toc-text\">java学习第三天</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#java%E7%BC%96%E5%86%99%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">java编写规范</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%91%BD%E4%BB%A4%E8%A1%8Cdos%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">命令行dos命令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E4%B8%8E%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">相对路径与绝对路径</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Java%E5%AD%A6%E4%B9%A0%E7%AC%AC4%E5%A4%A9\"><span class=\"toc-text\">Java学习第4天</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%93%E5%87%BA%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">输出语句</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">数据类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%B7%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">+号使用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%88Detail%EF%BC%89\"><span class=\"toc-text\">数据类型（Detail）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">基本数据类型转换</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%8A%A8%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">自动转换</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">强制转换</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#String%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">String类型</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Java-API%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">Java API文档</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#java%E5%AD%A6%E4%B9%A0%E7%AC%AC5%E5%A4%A9\"><span class=\"toc-text\">java学习第5天</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%95%B0%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">算数运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E7%BA%A7\"><span class=\"toc-text\">运算符优先级</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%87%E8%AF%86%E7%AC%A6%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99%E4%B8%8E%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">标识符命名规则与规范</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#java%E5%AD%A6%E4%B9%A0%E7%AC%AC6%E5%A4%A9\"><span class=\"toc-text\">java学习第6天</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5%EF%BC%88Scanner%EF%BC%89\"><span class=\"toc-text\">键盘输入（Scanner）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E5%88%B6\"><span class=\"toc-text\">进制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E7%A7%8D%E8%BF%9B%E5%88%B6%E6%95%B0\"><span class=\"toc-text\">四种进制数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E5%88%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">进制的基本转换</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8D%81%E8%BF%9B%E5%88%B6\"><span class=\"toc-text\">其他进制转十进制</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%81%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%85%B6%E4%BB%96%E8%BF%9B%E5%88%B6\"><span class=\"toc-text\">十进制转其他进制</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%85%B6%E4%BB%96%E8%BF%9B%E5%88%B6\"><span class=\"toc-text\">二进制转其他进制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%AB%E8%BF%9B%E5%88%B6%E3%80%81%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E8%BD%AC%E4%BA%8C%E8%BF%9B%E5%88%B6\"><span class=\"toc-text\">八进制、十六进制转二进制</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%A0%81%E3%80%81%E5%8F%8D%E7%A0%81%E3%80%81%E8%A1%A5%E7%A0%81\"><span class=\"toc-text\">原码、反码、补码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">位运算符</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Java%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%83-%E5%85%AB-%E5%A4%A9\"><span class=\"toc-text\">Java学习第七(八)天</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%BA%E5%BA%8F%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">顺序控制</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5%EF%BC%88if-else%EF%BC%89\"><span class=\"toc-text\">分支语句（if-else）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">单分支语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E5%88%86%E6%94%AF%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">多分支语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B5%8C%E5%A5%97%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">嵌套语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#switch%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">switch语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A9%BF%E9%80%8F%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">穿透的使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#if%E5%92%8Cswitch%E7%9A%84%E4%BD%BF%E7%94%A8%E9%80%89%E6%8B%A9\"><span class=\"toc-text\">if和switch的使用选择</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#java%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B9%9D%E5%A4%A9\"><span class=\"toc-text\">java学习第九天</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#for%E5%BE%AA%E7%8E%AF%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">for循环控制语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Detail\"><span class=\"toc-text\">Detail</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#for%E5%BE%AA%E7%8E%AF%E4%B8%8Eif%E8%AF%AD%E5%8F%A5%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E7%BB%93%E5%90%88\"><span class=\"toc-text\">for循环与if语句运算符的结合</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#for%E5%BE%AA%E7%8E%AF%E8%87%AA%E5%A2%9E%E4%B8%8E%E8%87%AA%E5%87%8F%E7%BB%93%E5%90%88\"><span class=\"toc-text\">for循环自增与自减结合</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#While%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">While循环</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#do%E3%80%82%E3%80%82%E3%80%82while%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">do。。。while循环</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E9%87%8D%E5%BE%AA%E7%8E%AF%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">多重循环控制</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#java%E5%AD%A6%E4%B9%A0%E7%AC%AC10%E5%A4%A9\"><span class=\"toc-text\">java学习第10天</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B7%B3%E8%BD%AC%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5-break\"><span class=\"toc-text\">跳转控制语句 break</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Detail-1\"><span class=\"toc-text\">Detail</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Continue\"><span class=\"toc-text\">Continue</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#return\"><span class=\"toc-text\">return</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84-Array\"><span class=\"toc-text\">数组 Array</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%89%E7%A7%8D%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">数组的三种使用方式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E4%B8%8EDetail\"><span class=\"toc-text\">注意事项与Detail</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E8%B5%8B%E5%80%BC-Assign\"><span class=\"toc-text\">数组赋值 Assign</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E6%89%A9%E5%B1%95%EF%BC%8C%E6%B7%BB%E5%8A%A0\"><span class=\"toc-text\">数组扩展，添加</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%E7%BC%A9%E5%87%8F\"><span class=\"toc-text\">数组缩减</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">排序</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E6%89%BE-sequence\"><span class=\"toc-text\">查找 sequence</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">二维数组</span></a></li></ol></li></ol></li></ol>","author":{"name":"无言","slug":"无言","avatar":"https://avatar.png","link":"https://tridiamond.tech","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/tridiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"专升本笔记","uid":"387214eb2cf808ac2891ae56d9c349b8","slug":"专升本笔记","date":"2020-08-15T10:49:36.000Z","updated":"2023-03-12T14:36:55.775Z","comments":true,"path":"api/articles/专升本笔记.json","keywords":null,"cover":"https://cover.png","text":"名词：​ 主要用作主语或宾语 冠词:​ a/an/the 放在名词前面 代词：​ 起代替作用的词（代词出现的句子，一定有答案） ​ I/we/you/he/she/it/they (主格人称代词，放在句子开头做主语) ​ me/us/you/him/her/it/them (宾格...","link":"","photos":[],"count_time":{"symbolsCount":"31k","symbolsTime":"28 mins."},"categories":[{"name":"Cate","slug":"Cate","count":4,"path":"api/categories/Cate.json"}],"tags":[{"name":"Tag","slug":"Tag","count":4,"path":"api/tags/Tag.json"}],"author":{"name":"无言","slug":"无言","avatar":"https://avatar.png","link":"https://tridiamond.tech","description":"Think like an artist, code like an artisan.","socials":{"github":"https://github.com/tridiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}